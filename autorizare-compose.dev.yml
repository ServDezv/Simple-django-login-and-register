version: '3.8'

volumes:
  pgdata:
  pgadmin:
  
services:
  django_dev:
    build:
      context: .
      dockerfile: docker/Dockerfile.dev.django
    ports:
      - "127.0.0.1:8000:8000"
    volumes:
      - .:/usr/src/app/
      - /tmp:/tmp
    hostname: django_dev
    environment:
      - RUN_DOCKERIZED=1
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    container_name: django_dev
    secrets:
      - postgres_password
    depends_on:
      - db_postgres
      - celery_beat
      - celery_worker

  celery_beat:
    build:
      context: .
      dockerfile: docker/Dockerfile.celery 
    command: celery -A config.celery beat --loglevel=INFO
    volumes:
      - .:/usr/src/app
      - /tmp:/tmp
    hostname: celery_beat
    container_name: celery_beat
    environment:
      - RUN_DOCKERIZED=1
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    secrets:
      - postgres_password
    depends_on:
      - celery_worker

  celery_worker:
    build:
      context: .
      dockerfile: docker/Dockerfile.celery
    command: celery -A config.celery worker --loglevel=INFO
    volumes:
      - .:/usr/src/app
      - /tmp:/tmp
    hostname: celery_worker
    container_name: celery_worker
    environment:
      - RUN_DOCKERIZED=1
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    secrets:
      - postgres_password
    depends_on:
      - redis
      - db_postgres

  redis:
    tty: true
    build:
      context: .
      dockerfile: docker/Dockerfile.redis
    ports:
      - "6379:6379"
    volumes:
      - /tmp:/tmp
    hostname: redis
    container_name: redis
    environment:
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL,CONFIG
    restart: on-failure

  db_pgadmin:
    image: dpage/pgadmin4
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "127.0.0.1:8001:80"
    container_name: db_pgadmin
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=postgres
      - POSTGRES_PASSWORD=postgres
    secrets:
      - pgadmin_password
      - postgres_password
    depends_on:
      - db_postgres

  db_postgres:
    image: postgres:14
    volumes:
      - pgdata:/var/lib/postgresql/data
      - /tmp:/tmp
    environment:
      - TZ=Europe/Bucharest
      - PGTZ=Europe/Bucharest
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    hostname: db_postgres
    container_name: db_postgres
    secrets:
      - postgres_password
  ldap_localserver:
    image: rroemhild/test-openldap
    ports:
      - "10389:10389"
      - "10636:10636"

secrets:
  postgres_password:
    file: secrets/postgres_password.txt
    # or extenal  = true by running docker secret postgre_password file, same as below
  pgadmin_password:
    file: secrets/pgadmin_password.txt